-- Importing required modules
local json = require("json")

-- Define the game state variables
local gameState = {
    currentNumber = nil,  -- The current number chosen by the player
    correctAnswers = 0,   -- Number of correct answers
    totalQuestions = 0,   -- Total number of questions asked
    timer = nil           -- Timer for each question
}

-- Define the questions for each challenge level
local easyQuestions = {
    {question = "What is the cube root of 1?", answer = 1},
    {question = "What is the cube root of 8?", answer = 2},
    {question = "What is 2 + 2?", answer = 4},
    {question = "What is 5 - 3?", answer = 2},
    {question = "What is 10 * 3?", answer = 30}
}

local difficultQuestions = {
    {question = "A couple has two children. The probability that both children are boys if the older one is a boy is?", answer = "1/2"},
    {question = "What is the probability of getting exactly two heads when flipping three fair coins?", answer = "3/8"},
    {question = "If you randomly select a card from a standard deck of 52 cards, what is the probability of selecting a red card?", answer = "1/2"},
    {question = "What is the probability of rolling a total of 7 on two fair six-sided dice?", answer = "1/6"},
    {question = "What is the probability of drawing two aces in a row from a standard deck of 52 cards?", answer = "1/221"}
}

local prettyHardQuestions = {
    {question = "A bag contains 2 red, 3 green, and 2 blue balls. Two balls are drawn at random. What is the probability that none of the balls drawn is blue?", answer = "5/21"},
    {question = "If you roll two fair six-sided dice, what is the probability that the sum of the dice is greater than 9?", answer = "5/12"},
    {question = "In a group of 40 people, what is the probability that at least two people have the same birthday?", answer = "0.891"},
    {question = "If you flip a fair coin 10 times, what is the probability of getting exactly 4 heads?", answer = "0.205"},
    {question = "What is the probability of selecting a prime number between 1 and 20?", answer = "8/20"}
}

-- Function to ask the player a question
local function askQuestion(questions, timerDuration)
    -- Increment the total questions asked
    gameState.totalQuestions = gameState.totalQuestions + 1
    
    -- Choose a random question
    local randomIndex = math.random(1, #questions)
    local currentQuestion = questions[randomIndex]
    
    -- Print the question and start the timer
    print("Question " .. gameState.totalQuestions .. ": " .. currentQuestion.question)
    print("You have " .. timerDuration .. " seconds to answer.")
    
    -- Start the timer
    gameState.timer = os.time()
    
    -- Read the player's answer
    local playerAnswer = io.read()
    
    -- Calculate the time taken
    local currentTime = os.time()
    local elapsedTime = currentTime - gameState.timer
    
    -- Check if the answer is correct and within the time limit
    if tostring(playerAnswer) == tostring(currentQuestion.answer) and elapsedTime <= timerDuration then
        -- Increment the correct answers count
        gameState.correctAnswers = gameState.correctAnswers + 1
        print("Correct answer!")
    else
        print("Wrong answer or time limit exceeded.")
        print("Game Over. You answered " .. gameState.correctAnswers .. " out of " .. gameState.totalQuestions .. " questions correctly.")
        print("Starting the game again.")
        -- Reset game state
        gameState.currentNumber = nil
        gameState.correctAnswers = 0
        gameState.totalQuestions = 0
        return
    end
    
    -- If the player answered correctly, ask another question
    askQuestion(questions, timerDuration)
end

-- Function to start the game with the chosen challenge level
local function startGame(challengeLevel)
    -- Start the game by asking the player to choose a number
    print("Welcome to the Math Challenge Game!")
    print("Please choose a number from 1 to 9:")
    gameState.currentNumber = tonumber(io.read())

    -- Validate the chosen number
    if gameState.currentNumber < 1 or gameState.currentNumber > 9 then
        print("Invalid number. Please choose a number from 1 to 9.")
        return
    end

    -- Determine the questions and timer duration based on the challenge level
    local questions
    local timerDuration
    if challengeLevel == "easy" then
        questions = easyQuestions
        timerDuration = 5
    elseif challengeLevel == "difficult" then
        questions = difficultQuestions
        timerDuration = 15
    elseif challengeLevel == "pretty hard" then
        questions = prettyHardQuestions
        timerDuration = 30
    else
        print("Invalid challenge level. Please choose either 'easy', 'difficult', or 'pretty hard'.")
        return
    end

    -- Start asking questions
    askQuestion(questions, timerDuration)
end

-- Start the game with the chosen challenge level
print("Choose your challenge level: 'easy', 'difficult', or 'pretty hard'")
local challengeLevel = io.read()
startGame(challengeLevel)
